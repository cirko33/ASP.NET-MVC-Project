///////////////////////////////////////////////////////////
//  DodelaProvider.cs
//  Implementation of the Class DodelaProvider
//  Generated by Enterprise Architect
//  Created on:      29-Aug-2022 18:54:29
//  Original author: Luka
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using Classes;
namespace Classes {
	public class DodelaProvider : IDodelaProvider {

		public int currentCommand = 0;
		public List<Command> m_Command;
		public DodelaLekara m_DodelaLekara;

		public DodelaProvider(){
			m_Command = new List<Command>();
			m_DodelaLekara = new DodelaLekara();
		}

        public DodelaProvider(DodelaLekara dodelaLekara)
        {
			m_Command = new List<Command>();
			m_DodelaLekara = dodelaLekara;
        }

        ~DodelaProvider(){

		}

		/// 
		/// <param name="pacijent"></param>
		/// <param name="lekar"></param>
		public void Dodeli(Pacijent pacijent, Lekar lekar){
			var cmd = new Dodeli(m_DodelaLekara, pacijent, lekar);
			cmd.Execute();
			m_Command.Add(cmd);
			currentCommand = m_Command.Count;
		}

		/// 
		/// <param name="pacijent"></param>
		public void Odjavi(Pacijent pacijent){
			var cmd = new Odjavi(m_DodelaLekara, pacijent, null);
			cmd.Execute();
			m_Command.Add(cmd);
			currentCommand = m_Command.Count;
		}

		public void Redo(){
			if(currentCommand != m_Command.Count)
				m_Command[currentCommand++].Execute();
		}

		public void Undo(){
			if (currentCommand == 0)
				return;
			m_Command[--currentCommand].Unexecute();
		}

	}//end DodelaProvider

}//end namespace Classes