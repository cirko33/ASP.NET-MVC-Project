///////////////////////////////////////////////////////////
//  KorisnikProvider.cs
//  Implementation of the Class KorisnikProvider
//  Generated by Enterprise Architect
//  Created on:      29-Aug-2022 18:54:29
//  Original author: Luka
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Classes;
using System.Data;
using MySql.Data.MySqlClient;
using Dapper;

namespace Classes {
	public class KorisnikProvider : IKorisnikProvider {

		public KorisnikProvider(){

		}

		~KorisnikProvider(){

		}

		/// 
		/// <param name="id"></param>
		public Korisnik DobaviKorisnika(int id){
			using (IDbConnection c = new MySqlConnection(ConnectionString.Read()))
			{
				return c.QueryFirst<Korisnik>("select * from korisnik where id = @Id", new { Id = id });
			}
		}

		/// 
		/// <param name="korisnik"></param>
		public void DodajKorisnika(Korisnik korisnik){
			using (IDbConnection c = new MySqlConnection(ConnectionString.Read()))
			{
				var list = c.Query<Korisnik>("select * from korisnik").AsList();
				if (list.Find(t => t.KorisnickoIme == korisnik.KorisnickoIme) != null)
					return;
				c.Execute($"insert into korisnik (ime, prezime, korisnickoIme, lozinka, tip) values (@Ime, @Prezime, @KorisnickoIme, @Lozinka, '{Enum.GetName(typeof(Tip), korisnik.Tip)}')", korisnik);
			}
		}

		/// 
		/// <param name="id"></param>
		/// <param name="korisnik"></param>
		public void IzmeniKorisnika(int id, Korisnik korisnik){
			using (IDbConnection c = new MySqlConnection(ConnectionString.Read()))
			{
				c.Execute($"update korisnik set ime = @Ime, prezime = @Prezime, korisnickoIme = @KorisnickoIme, lozinka = @Lozinka, tip = '{Enum.GetName(typeof(Tip), korisnik.Tip)}' where id = @Id", korisnik);
			}
		}

		/// 
		/// <param name="id"></param>
		public void ObrisiKorisnika(int id){
			using (IDbConnection c = new MySqlConnection(ConnectionString.Read()))
			{
				c.Execute("delete from korisnik where id = @Id", new { Id = id });
			}
		}

		public List<Korisnik> SviKorisnici(){
			using (IDbConnection c = new MySqlConnection(ConnectionString.Read()))
			{
				return c.Query<Korisnik>("select * from korisnik ").AsList();
			}
		}

	}//end KorisnikProvider

}//end namespace Classes