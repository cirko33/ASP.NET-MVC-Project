///////////////////////////////////////////////////////////
//  PacijentProvider.cs
//  Implementation of the Class PacijentProvider
//  Generated by Enterprise Architect
//  Created on:      29-Aug-2022 18:54:30
//  Original author: Luka
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Classes;
using System.Data;
using MySql.Data.MySqlClient;
using Dapper;
namespace Classes {
	public class PacijentProvider : IPacijentProvider {

		public PacijentProvider(){

		}

		~PacijentProvider(){

		}

		/// 
		/// <param name="id"></param>
		public Pacijent Dobavi(int id){
			using (IDbConnection c = new MySqlConnection(ConnectionString.Read()))
			{
				ILekarProvider lekarProvider = new LekarProvider();
				var dto = c.QueryFirst<PacijentDTO>("select * from (pacijent inner join korisnik on pacijent.id = korisnik.id) where pacijent.id = @Id", new { Id = id });
				if(dto.LekarId != -1)
					dto.Lekar = lekarProvider.Dobavi(dto.LekarId);
				return dto.GetPacijent();
			}
		}

		/// 
		/// <param name="obj"></param>
		public void Dodaj(Pacijent obj){
			using (IDbConnection c = new MySqlConnection(ConnectionString.Read()))
			{
				var list = c.Query<Korisnik>("select * from korisnik").AsList();
				if (list.Find(t => t.KorisnickoIme == obj.KorisnickoIme) != null)
					return;
				c.Execute($"insert into korisnik (ime, prezime, korisnickoIme, lozinka, tip) values (@Ime, @Prezime, @KorisnickoIme, @Lozinka, '{Enum.GetName(typeof(Tip), obj.Tip)}')", obj);
				obj.Id = c.QueryFirst<int>("select id from korisnik where korisnickoIme = @KorisnickoIme", obj);
				c.Execute($"insert into pacijent (id, jmbg) values (@Id, @JMBG)", obj);
			}
		}

		/// 
		/// <param name="id"></param>
		/// <param name="obj"></param>
		public void Izmena(int id, Pacijent obj){
			IKorisnikProvider korisnikProvider = KorisnikStrategy.GetStrategy();
			korisnikProvider.IzmeniKorisnika(id, obj);
		}

		/// 
		/// <param name="id"></param>
		public void Obrisi(int id){
			using (IDbConnection c = new MySqlConnection(ConnectionString.Read()))
			{
				c.Execute($"delete from PacijentBolnica where pacijentId = {id}");
				c.Execute("delete from pacijent where id = @Id", new { Id = id });
				c.Execute("delete from korisnik where id = @Id", new { Id = id });
			}
		}

		public List<Pacijent> Svi(){
			using (IDbConnection c = new MySqlConnection(ConnectionString.Read()))
			{
				var ids = c.Query<int>("select * from korisnik where tip = 'Pacijent'").AsList();
				var list = new List<Pacijent>();
                foreach (var i in ids)
                {
					list.Add(Dobavi(i));
                }
				return list;
			}
		}

	}//end PacijentProvider

}//end namespace Classes