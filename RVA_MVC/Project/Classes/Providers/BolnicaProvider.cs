///////////////////////////////////////////////////////////
//  BolnicaProvider.cs
//  Implementation of the Class BolnicaProvider
//  Generated by Enterprise Architect
//  Created on:      29-Aug-2022 18:54:28
//  Original author: Luka
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Classes;
using System.Data;
using MySql.Data.MySqlClient;
using Dapper;

namespace Classes {
	public class BolnicaProvider : IBolnicaProvider {

		public BolnicaProvider(){

		}

		~BolnicaProvider(){

		}

		/// 
		/// <param name="id"></param>
		public Bolnica BolnicaSaID(int id){
			using (IDbConnection c = new MySqlConnection(ConnectionString.Read()))
			{
				var dto = c.QueryFirst<BolnicaDTO>("select * from bolnica where id = @Id", new { Id = id });
				dto.LekarIDs = c.Query<int>("select lekarId from LekarBolnica where bolnicaId = @Id", new { Id = id }).AsList();
				dto.PacijentIDs = c.Query<int>("select pacijentId from PacijentBolnica where bolnicaId = @Id", new { Id = id }).AsList();
                foreach (var item in dto.LekarIDs)
					dto.Lekari.Add(c.QueryFirst<Lekar>("select * from (lekar inner join korisnik on lekar.id = korisnik.id) where lekar.id = @Id", new { Id = item }));
				foreach (var item in dto.PacijentIDs)
					dto.Pacijenti.Add(c.QueryFirst<Pacijent>("select * from (pacijent inner join korisnik on pacijent.id = korisnik.id) where pacijent.id = @Id", new { Id = item }));
				return dto.GetBolnica();
			}
		}

		/// 
		/// <param name="bolnica"></param>
		public void DodajBolnicu(Bolnica bolnica){
			using (IDbConnection c = new MySqlConnection(ConnectionString.Read()))
			{
				c.Execute($"insert into bolnica (brojLekara, brojOdeljenja, naziv, vrsta) values (@BrojLekara, @BrojOdeljenja, @Naziv, '{Enum.GetName(typeof(VrstaBolnice), bolnica.Vrsta)}')", bolnica);
			}
		}

		/// 
		/// <param name="id"></param>
		/// <param name="bolnica"></param>
		public void IzmeniBolnicu(int id, Bolnica bolnica){
			using (IDbConnection c = new MySqlConnection(ConnectionString.Read()))
			{
				c.Execute($"update bolnica set brojLekara = @BrojLekara, brojOdeljenja = @BrojOdeljenja, naziv = @Naziv, vrsta = '{Enum.GetName(typeof(VrstaBolnice), bolnica.Vrsta)}' where id = @Id", bolnica);
			}
		}

		/// 
		/// <param name="id"></param>
		public void ObrisiBolnicu(int id){
			//Nema mogucnost
			return;
		}

		public List<Bolnica> SveBolnice(){
			using (IDbConnection c = new MySqlConnection(ConnectionString.Read()))
			{
				var ids = c.Query<int>("select id from bolnica").AsList();
				var bol = new List<Bolnica>();
                foreach (var i in ids)
                {
					bol.Add(BolnicaSaID(i));
                }
				return bol;
			}
		}

	}//end BolnicaProvider

}//end namespace Classes