///////////////////////////////////////////////////////////
//  Logger.cs
//  Implementation of the Class Logger
//  Generated by Enterprise Architect
//  Created on:      29-Aug-2022 18:54:30
//  Original author: Luka
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using Classes;
using log4net;
using log4net.Core;
using System.Xml;
using System.Reflection;
using log4net.Config;

namespace Classes {
	public class Logger : ILogger {
		readonly ILog _logger = LogManager.GetLogger(typeof(Logger));
		public Logger(){

		}

		~Logger(){

		}

		/// 
		/// <param name="text"></param>
		public void LogDebug(string text){
			_logger.Debug(text);
		}

		/// 
		/// <param name="text"></param>
		public void LogError(string text){
			_logger.Error(text);
		}

		/// 
		/// <param name="text"></param>
		public void LogFatal(string text){
			_logger.Fatal(text);
		}

		/// 
		/// <param name="text"></param>
		public void LogInfo(string text){
			_logger.Info(text);
		}

		/// 
		/// <param name="text"></param>
		public void LogWarn(string text){
			_logger.Warn(text);
		}

	}//end Logger

}//end namespace Classes