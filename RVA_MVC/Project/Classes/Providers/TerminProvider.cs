///////////////////////////////////////////////////////////
//  TerminController.cs
//  Implementation of the Class TerminController
//  Generated by Enterprise Architect
//  Created on:      29-Aug-2022 18:54:30
//  Original author: Luka
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Classes;
using System.Data;
using MySql.Data.MySqlClient;
using Dapper;

namespace Classes {
	public class TerminProvider : ITerminProvider {
		public TerminProvider(){

		}

		~TerminProvider(){

		}

		/// 
		/// <param name="id"></param>
		public Termin Dobavi(int id)
		{
			using (IDbConnection c = new MySqlConnection(ConnectionString.Read()))
			{
				var dto = c.QueryFirst<TerminDTO>("select * from termin where id = @Id", new { Id = id });
				IBolnicaProvider b = new BolnicaProvider();
				IPacijentProvider p = new PacijentProvider();
				ILekarProvider l = new LekarProvider();
				dto.Bolnica = b.BolnicaSaID(dto.BolnicaId);
				dto.Lekar = l.Dobavi(dto.LekarId);
				dto.Pacijent = p.Dobavi(dto.PacijentId);
				return dto.GetTermin();
			}
		}

		/// 
		/// <param name="termin"></param>
		public void Dodaj(Termin termin)
		{
			using (IDbConnection c = new MySqlConnection(ConnectionString.Read()))
			{
				c.Execute("insert into termin (bolnicaId, datumIVreme, lekarId, pacijentId, trajanje) values (@BolnicaId, @DatumIVreme, @LekarId, @PacijentId, @Trajanje)", new
				{
					BolnicaId = termin.Bolnica.Id,
					DatumIVreme = termin.DatumIVreme.ToString("g"),
					LekarId = termin.Lekar.Id,
					PacijentId = termin.Pacijent.Id,
					Trajanje = termin.Trajanje
				});
			}
		}

		/// 
		/// <param name="id"></param>
		/// <param name="termin"></param>
		public void Izmeni(int id, Termin termin)
		{
			using (IDbConnection c = new MySqlConnection(ConnectionString.Read()))
			{
				int status = 1;
				if (termin.m_StatusCekanja is Ceka)
					status = 2;
				else if (termin.m_StatusCekanja is Odbijen)
					status = 1;
				else if (termin.m_StatusCekanja is Pregledan)
					status = 4;
				else
					status = 3;

				c.Execute("update termin set bolnicaId = @BolnicaId, datumIVreme = @DatumIVreme, lekarId = @LekarId, pacijentId =  @PacijentId, trajanje = @Trajanje, statusCekanja = @Status where id = " + id, new
				{
					BolnicaId = termin.Bolnica.Id,
					DatumIVreme = termin.DatumIVreme,
					LekarId = termin.Lekar.Id,
					PacijentId = termin.Pacijent.Id,
					Trajanje = termin.Trajanje,
					Status = status
				});
			}
		}

		/// 
		/// <param name="id"></param>
		public void Obrisi(int id)
		{
			using (IDbConnection c = new MySqlConnection(ConnectionString.Read()))
				c.Execute("delete from termin where id = " + id);
		}

		public List<Termin> Svi()
		{
			using (IDbConnection c = new MySqlConnection(ConnectionString.Read()))
			{
				var dto = c.Query<TerminDTO>("select * from termin").AsList();
				var list = new List<Termin>();
				IBolnicaProvider b = new BolnicaProvider();
				IPacijentProvider p = new PacijentProvider();
				ILekarProvider l = new LekarProvider();
				for (int i = 0; i < dto.Count; i++)
				{
					dto[i].Bolnica = b.BolnicaSaID(dto[i].BolnicaId);
					dto[i].Lekar = l.Dobavi(dto[i].LekarId);
					dto[i].Pacijent = p.Dobavi(dto[i].PacijentId);
					list.Add(dto[i].GetTermin());
				}
				return list;
			}
		}


	}//end TerminController

}//end namespace Classes


