drop table if exists LekarBolnica;
drop table if exists PacijentBolnica;
drop table if exists Termin;
drop table if exists Lekar;
drop table if exists Pacijent;
drop table if exists Korisnik;
drop table if exists Bolnica;

create table if not exists Korisnik(
	id int primary key auto_increment,
    ime varchar(100) not null,
    prezime varchar(100) not null,
    korisnickoIme varchar(100) not null,
    lozinka varchar(100) not null,
    tip enum ('Lekar', 'Pacijent', 'Administrator') not null
);
create table if not exists Bolnica(
	id int primary key auto_increment,
    brojLekara int not null ,
    brojOdeljenja int not null,
    naziv varchar(255) not null,
    vrsta enum ('DomZdravlja', 'Ambulanta') not null
);
create table if not exists Lekar(
	id int not null,
    titula enum ('PhD', 'DrSc', 'Dr') not null,
    odeljenje enum ('Hirurgija','Ortopedija', 'Pedijatrija', 'Opsta') not null,
    specijalizacija enum ('Hirurg', 'OpstaMedicina', 'Pedijatar', 'Ortoped') not null,
    bolnicaId int not null,
	foreign key (id) references Korisnik(id),
    foreign key (bolnicaId) references Bolnica(id)
);

create table if not exists Pacijent(
	jmbg varchar(13) not null,
    id int not null,
    lekarId int not null default -1,
    foreign key (id) references Korisnik(id)
);

create table if not exists LekarBolnica(
	lekarId int not null,
    bolnicaId int not null,
    foreign key (lekarId) references Lekar(id),
	foreign key (bolnicaId) references Bolnica(id)
);

create table if not exists PacijentBolnica(
	bolnicaId int not null,
    pacijentId int not null,
    foreign key (pacijentId) references Pacijent(id),
	foreign key (bolnicaId) references Bolnica(id)
);

create table if not exists Termin(
	id int primary key auto_increment,
	bolnicaId int not null,
    datumIVreme varchar(100) not null,
    statusCekanja enum ('Odbijen', 'Ceka', 'UToku', 'Pregledan') not null default 'Ceka',
    lekarId int not null,
    pacijentId int not null,
    trajanje int not null,
    foreign key (bolnicaId) references Bolnica(id),
    foreign key (lekarId) references Korisnik(id),
    foreign key (pacijentId) references Korisnik(id)
);


insert into korisnik (ime, prezime, korisnickoIme, lozinka, tip) values ('Admin', 'Admin', 'admin', 'admin', 'Administrator');
insert into korisnik (ime, prezime, korisnickoIme, lozinka, tip) values ('Luka', 'Ciric', 'cirko', 'cirko', 'Lekar');
insert into korisnik (ime, prezime, korisnickoIme, lozinka, tip) values ('Dejan', 'Kurdulija', 'kuki', 'kuki', 'Pacijent');
insert into bolnica (brojLekara, brojOdeljenja, naziv, vrsta) values (1, 3, 'Kovid', 'Ambulanta');
insert into lekar (id, titula, odeljenje, specijalizacija, bolnicaId) values (2, 'PhD', 'Hirurgija', 'Hirurg', 1);
insert into pacijent (id, jmbg, lekarId) values (3, '123456789012', 2);
insert into LekarBolnica (lekarId, bolnicaId) values (2, 1);
insert into PacijentBolnica (pacijentId, bolnicaId) values (3, 1);
insert into termin (bolnicaId, datumIVreme, lekarId, pacijentId, trajanje) values (1, '12/12/2022 18:30', 2, 3, 15);